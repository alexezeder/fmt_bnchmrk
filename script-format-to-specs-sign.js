dayjs.extend(window.dayjs_plugin_utc)
dayjs.extend(window.dayjs_plugin_timezone)
dayjs.extend(window.dayjs_plugin_advancedFormat)
const colors=[[255,0,0],[0,0,255],[0,255,0],[254,255,0],[0,254,255],[255,0,254],[255,127,127],[127,127,255],[127,255,127],[254,255,127],[127,254,255],[255,127,254],[127,0,0],[0,0,127],[0,127,0],[127,127,0],[0,127,127],[127,0,127],];const getColor=(index,opacity)=>{let color=colors[index];return'rgb('+color[0]+', '+color[1]+', '+color[2]+', '+opacity+')';};const commits=[{hash:'161059dd981b18a3f6b9babc922539adc52dab70',message:"Add support for extended precision FP",date:dayjs.unix(5591),},{hash:'a1ea3e015b1c07e740e9b69e7625dcafce4a23c7',message:"Move built-in formatter specialization to core",date:dayjs.unix(5592),},{hash:'70de324aa801eaf52e94c402d526a3849797c620',message:"Apply 2746 fix for NVidia compiler also (#2770)",date:dayjs.unix(5593),},{hash:'6a1346405949ca1cf5befc5e83c6c66c86e4f9d1',message:"Include 128-bit with other signed integers in specifier\ncheck",date:dayjs.unix(5594),},{hash:'ce93a66dfbf99fe270bca0b6eaf50ce6bbbbc740',message:"Implement a fallback uint128_t",date:dayjs.unix(5595),},{hash:'ae25f7968efca30a6483ad7802ccfa5419f6330a',message:"add ability to build Apple framework using CMAKE_FRAMEWORK",date:dayjs.unix(5596),},{hash:'d8e1dd4ab291862498e40542b74c91124c5aa06e',message:"improve installing headers",date:dayjs.unix(5597),},{hash:'532a69a6397e908fe97d23963ee48efe47f76f3c',message:"Fix handling of 96-bit long double with -m32",date:dayjs.unix(5598),},{hash:'15c2a3baccf4271cf60d47cc8db3d2e525c49cd8',message:"int128_t -\u003e int128_opt",date:dayjs.unix(5599),},{hash:'d38f72aff28d234cd6b379510a98480162a9141c',message:"Refactor fallback ints",date:dayjs.unix(5600),},{hash:'4ddab8901cb7d8bafb7ad6fe15bab46635734e32',message:"Merge accumulator into int128_fallback",date:dayjs.unix(5601),},{hash:'47da218cc33c631326b9d77194a6853ea9d568b0',message:"Remove uintptr_fallback",date:dayjs.unix(5602),},{hash:'05432e570e70dd2f64d0ada048f1f473003fa353',message:"Use consistent indentation",date:dayjs.unix(5603),},{hash:'b6d56170fc1a062d331d972ad959334bb0959642',message:"Remove unnecessary inline",date:dayjs.unix(5604),},{hash:'2c8cd2db34f2dc8fad9f62361368bd04bc794c59',message:"Fix handling of zero precision",date:dayjs.unix(5605),},{hash:'a0b43bfae20d2cf3c7980cf20446e317abd65706',message:"Add support for 96-bit long double",date:dayjs.unix(5606),},{hash:'7b96420961002a1026dcd5ba8f4d0def94fa0699',message:"Remove unused include",date:dayjs.unix(5607),},{hash:'af5d8004fc42b56ceb8204d9911aea2be600c879',message:"Limit Dragonbox to supported FP formats",date:dayjs.unix(5608),},{hash:'1319719a5ee916dbdafc1173b2ae3ec1cd1ffa2e',message:"Add underlying_t",date:dayjs.unix(5609),},{hash:'aad44f28396b8cf9722d74027b94840820f7c3dc',message:"Add fmt::enums::format_as",date:dayjs.unix(5610),},{hash:'ea3d326c636a8bb22cec94ebc75273982548143a',message:"Fix clang -Wliteral-range warning (#2779)",date:dayjs.unix(5611),},{hash:'cbc59ca893f35fcdd82438ef816d16a512d9c7f5',message:"Clear moved from memory buffer",date:dayjs.unix(5612),},{hash:'70dc3de053b6814c023faebbd21525aab575d25d',message:"Update format.h",date:dayjs.unix(5613),},{hash:'cf940ae82e24cb67ace3d32ba3176ee772da5483',message:"Simplify to_decimal",date:dayjs.unix(5614),},{hash:'4fcacea3543609f9637c21ed04a58d6bd20011ba',message:"Parameterized fp on significand type",date:dayjs.unix(5615),},{hash:'1a18a2f3dd6c76e78e2e98f6147e71736f752bdb',message:"Fixing \"C4127: conditional expression is constant\" Visual\nStudio 2022 warning in pedantic mode (#2783)",date:dayjs.unix(5616),},{hash:'ea6f0bf0e555c744fccbc0f6aa0e52b0429964cd',message:"Minor cleanup",date:dayjs.unix(5617),},{hash:'f607e3e970fe0dc0e71b04e4a65f50e90aac74df',message:"Add __float128 support",date:dayjs.unix(5681),},{hash:'22d31b31f0e9b4e4654ba67ee881f3564c2cc297',message:"Add a __float128 test",date:dayjs.unix(5682),},{hash:'a935ac3e60306f9220ed983eac97cb44a492171c',message:"MSVC CMake generation optimization (#2852)",date:dayjs.unix(5683),},{hash:'c55175a58906934416adf5fc5b820fcbb60ea6d1',message:"Add an issue template",date:dayjs.unix(5684),},{hash:'8751a03a042850854c6cdfbab510758e7f9d0f89',message:"Fix Unicode handling when writing to an ostream",date:dayjs.unix(5685),},{hash:'ce7ecdb7afb207dadf55c8ae457e14aa44e7f537',message:"Replace conditional compilation with SFINAE",date:dayjs.unix(5686),},{hash:'fc429d18b6d3c7587ae66cce27504871d4f49962',message:"Avoid overhead on sensible platforms",date:dayjs.unix(5687),},{hash:'395cf0f03ecaa35c24faaaca42d481e316f00422',message:"Fix detection of unformattable pointers",date:dayjs.unix(5688),},{hash:'192f79aaae0940c420cffd6c17c66770e502f039',message:"Fix handling of locale separators in FP formatting",date:dayjs.unix(5689),},{hash:'86e27ccb41c2708e17ba264359223ef664d9bb78',message:"Suppress a warning",date:dayjs.unix(5690),},];const data={labels:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],datasets:[{label:'space_float',data:[539.9378049031147,540.1032027645625,539.8561931867824,542.1747918512411,545.7821158937512,541.5011379017882,545.5678317840581,541.8449755068564,541.571875257353,541.9282043124163,545.312967766227,541.7142750135738,548.8018776721898,545.7167070578231,545.4133476849607,545.8024507727354,544.8190170693528,544.6287535949025,545.1091817656433,540.9946249316316,541.2205178372374,548.013661060244,544.2048273866684,544.8865350498266,544.3535604147323,541.3682722076682,541.019988555954,536.6922024385866,536.6438066853132,544.999295571963,553.7375617680717,537.2437951130754,553.0415512588539,536.4586329421405,553.6903146257428,550.5164990115545,542.5769999175623,],fill:false,cubicInterpolationMode:'monotone',tension:0.4,radius:0,borderColor:getColor(0,1.0),backgroundColor:getColor(0,0.5),},{label:'minus_float',data:[522.2356909873264,530.4884344141853,530.4670507050195,535.480649305744,538.7937932649844,524.2003959732546,550.6203118794909,535.3560305180295,546.150589631187,547.153190061219,527.2428289840435,524.3874953911278,530.6724667220406,528.1216018963215,527.7036268224325,528.8660999587629,527.4827454560656,526.7823555417432,526.8545985155205,523.0995602064874,523.1227018981967,531.5672147305471,528.0008006707518,528.5755424616034,527.479562325997,523.193619511327,523.8776862760525,520.6368868914827,521.0308974178657,520.6350732316561,521.3583780992467,520.630057825278,520.6869897265129,521.0737344939272,520.9542417952681,525.1547475227601,525.3525365046289,],fill:false,cubicInterpolationMode:'monotone',tension:0.4,radius:0,borderColor:getColor(1,1.0),backgroundColor:getColor(1,0.5),},{label:'plus_float',data:[543.046115743192,551.1045318218352,551.2079459298516,551.7931850302566,555.2006710439974,545.8922843591796,561.0640888540448,551.7654804949392,557.8258869912856,557.861448397892,549.5997104256506,545.3286991607995,552.1981725415337,548.3316407262413,548.0087441494269,549.0592829493627,548.33104334572,547.5843242476476,548.2336361126728,544.6905852708629,544.5364575950497,551.5077128323704,547.6051255759893,548.0859887018897,547.0742809854647,544.261574197437,544.1072515071053,540.307206777542,540.2309303351262,540.3307156727436,540.4733643220605,539.9318586530618,540.2464940417141,540.171470181409,540.1190023566132,544.3864768389558,544.9139648413301,],fill:false,cubicInterpolationMode:'monotone',tension:0.4,radius:0,borderColor:getColor(2,1.0),backgroundColor:getColor(2,0.5),},{label:'space_integer',data:[356.82489987134073,356.9049592479494,357.12057733203613,357.17887771198633,357.0186995668906,357.0829311289404,357.3090314105598,357.15578877329045,357.3118429579991,357.3735474585251,357.0013839513626,357.09596507462675,357.22100587982897,357.1619436586498,346.5948507060477,346.4642219753514,346.51267702816904,346.39603553976303,346.213798169291,346.3205938302287,346.4128698843875,346.438380553338,346.1548482909387,346.2765597014631,346.3023345897036,346.40077540517404,346.3483736076491,348.06864062367396,348.18105592742273,347.9810456711322,348.29949018599365,348.08032093193304,348.2111160687623,348.6117808833255,348.02731678400977,347.8666643769902,348.18352906463605,],fill:false,cubicInterpolationMode:'monotone',tension:0.4,radius:0,borderColor:getColor(3,1.0),backgroundColor:getColor(3,0.5),},{label:'minus_integer',data:[336.74657299952827,336.65555106717187,336.75002372569224,337.789630523457,337.46102528641933,337.3197112466178,336.9368668239688,337.43326627329554,337.4321920653662,337.8783999439444,338.033147629822,337.5302530381614,337.4527293607015,338.0573389873579,336.22910995828073,336.30987548124995,335.741865402487,335.6964635449751,335.548767179019,335.65209343453034,335.4519360285333,335.3611534043819,335.57123068316497,335.61756755450466,335.65264034214266,336.2949988250455,335.54041176374477,337.5796564340108,337.60221856404087,337.0345422024436,337.50906472834464,337.3815561540428,337.47839114962954,337.6903128320574,337.49182238380945,337.1364834447112,337.37183749695504,],fill:false,cubicInterpolationMode:'monotone',tension:0.4,radius:0,borderColor:getColor(4,1.0),backgroundColor:getColor(4,0.5),},{label:'plus_integer',data:[360.2220807034524,360.22345011795807,360.31702393443084,363.36244139915635,362.98871148459233,360.5277229494488,366.25454486119503,363.04243836531833,366.0108324863613,366.36733791598425,360.58329930609676,365.81550815916063,362.9111617147625,360.4207347819119,349.9293224214509,349.56803761170016,349.6327043060622,349.64003734271154,349.722529726863,349.62449164314484,349.8173952202949,349.6388831244241,349.50054808816736,349.81130363832784,349.47981539165784,349.5359303737353,349.5570446255843,351.62211142227915,351.6297064004896,351.59479101552046,351.89875056000216,351.36863973311273,351.71363400406125,351.29416795063554,351.6988178517918,351.27759662452394,351.5912946743313,],fill:false,cubicInterpolationMode:'monotone',tension:0.4,radius:0,borderColor:getColor(5,1.0),backgroundColor:getColor(5,0.5),},]};const getCommitMessage=(tooltipItems)=>{let index=tooltipItems[0].dataIndex;let commit=commits[index];return commit.message;};const getCommitInfo=(tooltipItems)=>{let index=tooltipItems[0].dataIndex;let commit=commits[index];return commit.hash+'\n'+commit.date.format('YYYY-MM-DD HH:mm:ss z');};const htmlToElement=(html)=>{let template=document.createElement('template');html=html.trim();template.innerHTML=html;return template.content.firstChild;};const getCommitLink=(commitHash)=>{return"https://github.com/fmtlib/fmt/commit/"+commitHash;};const createAlert=(isSuccessful,commitHash)=>{return htmlToElement('\
    <div class="user-select-none alert alert-'+(isSuccessful?'success':'warning')+'" role="alert">\
      Commit hash '+(isSuccessful?'is':'couldn\'t be')+' copied to clipboard!\
      <a class="alert-link">Open it on Github</a>.\
    </div>');};const createToast=(isSuccessful,commitHash)=>{let toastsContainer=document.getElementById('toasts');let alertEl=createAlert(isSuccessful,commitHash);return Toastify({node:alertEl,duration:3000,destination:getCommitLink(commitHash),newWindow:true,close:false,stopOnFocus:true,selector:toastsContainer,callback:()=>{alertEl.remove();}});};const onChartClick=(event,elements,chart)=>{if(elements.length>0){let index=elements[0].index;let commit=commits[index];navigator.clipboard.writeText(commit.hash).then(function(){createToast(true,commit.hash).showToast();},function(){createToast(false,commit.hash).showToast();});}};const config={type:'line',data:data,options:{responsive:true,maintainAspectRatio:false,interaction:{intersect:false,mode:'index',},scales:{x:{ticks:{display:false,},grid:{display:false,}},},plugins:{tooltip:{callbacks:{title:getCommitMessage,beforeBody:getCommitInfo,}},title:{display:true,text:"fmt::format_to() with format string with sign specs",}},onClick:onChartClick,}};let ctx=document.getElementById('benchmarkChart');let bnchChart=new Chart(ctx,config);