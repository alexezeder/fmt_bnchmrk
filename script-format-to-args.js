dayjs.extend(window.dayjs_plugin_utc)
dayjs.extend(window.dayjs_plugin_timezone)
dayjs.extend(window.dayjs_plugin_advancedFormat)
const colors=[[255,0,0],[0,0,255],[0,255,0],[254,255,0],[0,254,255],[255,0,254],[255,127,127],[127,127,255],[127,255,127],[254,255,127],[127,254,255],[255,127,254],[127,0,0],[0,0,127],[0,127,0],[127,127,0],[0,127,127],[127,0,127],];const getColor=(index,opacity)=>{let color=colors[index];return'rgb('+color[0]+', '+color[1]+', '+color[2]+', '+opacity+')';};const commits=[{hash:'161059dd981b18a3f6b9babc922539adc52dab70',message:"Add support for extended precision FP",date:dayjs.unix(5591),},{hash:'a1ea3e015b1c07e740e9b69e7625dcafce4a23c7',message:"Move built-in formatter specialization to core",date:dayjs.unix(5592),},{hash:'70de324aa801eaf52e94c402d526a3849797c620',message:"Apply 2746 fix for NVidia compiler also (#2770)",date:dayjs.unix(5593),},{hash:'6a1346405949ca1cf5befc5e83c6c66c86e4f9d1',message:"Include 128-bit with other signed integers in specifier\ncheck",date:dayjs.unix(5594),},{hash:'ce93a66dfbf99fe270bca0b6eaf50ce6bbbbc740',message:"Implement a fallback uint128_t",date:dayjs.unix(5595),},{hash:'ae25f7968efca30a6483ad7802ccfa5419f6330a',message:"add ability to build Apple framework using CMAKE_FRAMEWORK",date:dayjs.unix(5596),},{hash:'d8e1dd4ab291862498e40542b74c91124c5aa06e',message:"improve installing headers",date:dayjs.unix(5597),},{hash:'532a69a6397e908fe97d23963ee48efe47f76f3c',message:"Fix handling of 96-bit long double with -m32",date:dayjs.unix(5598),},{hash:'15c2a3baccf4271cf60d47cc8db3d2e525c49cd8',message:"int128_t -\u003e int128_opt",date:dayjs.unix(5599),},{hash:'d38f72aff28d234cd6b379510a98480162a9141c',message:"Refactor fallback ints",date:dayjs.unix(5600),},{hash:'4ddab8901cb7d8bafb7ad6fe15bab46635734e32',message:"Merge accumulator into int128_fallback",date:dayjs.unix(5601),},{hash:'47da218cc33c631326b9d77194a6853ea9d568b0',message:"Remove uintptr_fallback",date:dayjs.unix(5602),},{hash:'05432e570e70dd2f64d0ada048f1f473003fa353',message:"Use consistent indentation",date:dayjs.unix(5603),},{hash:'b6d56170fc1a062d331d972ad959334bb0959642',message:"Remove unnecessary inline",date:dayjs.unix(5604),},{hash:'2c8cd2db34f2dc8fad9f62361368bd04bc794c59',message:"Fix handling of zero precision",date:dayjs.unix(5605),},{hash:'a0b43bfae20d2cf3c7980cf20446e317abd65706',message:"Add support for 96-bit long double",date:dayjs.unix(5606),},{hash:'7b96420961002a1026dcd5ba8f4d0def94fa0699',message:"Remove unused include",date:dayjs.unix(5607),},{hash:'af5d8004fc42b56ceb8204d9911aea2be600c879',message:"Limit Dragonbox to supported FP formats",date:dayjs.unix(5608),},{hash:'1319719a5ee916dbdafc1173b2ae3ec1cd1ffa2e',message:"Add underlying_t",date:dayjs.unix(5609),},{hash:'aad44f28396b8cf9722d74027b94840820f7c3dc',message:"Add fmt::enums::format_as",date:dayjs.unix(5610),},{hash:'ea3d326c636a8bb22cec94ebc75273982548143a',message:"Fix clang -Wliteral-range warning (#2779)",date:dayjs.unix(5611),},{hash:'cbc59ca893f35fcdd82438ef816d16a512d9c7f5',message:"Clear moved from memory buffer",date:dayjs.unix(5612),},{hash:'70dc3de053b6814c023faebbd21525aab575d25d',message:"Update format.h",date:dayjs.unix(5613),},{hash:'cf940ae82e24cb67ace3d32ba3176ee772da5483',message:"Simplify to_decimal",date:dayjs.unix(5614),},{hash:'4fcacea3543609f9637c21ed04a58d6bd20011ba',message:"Parameterized fp on significand type",date:dayjs.unix(5615),},{hash:'1a18a2f3dd6c76e78e2e98f6147e71736f752bdb',message:"Fixing \"C4127: conditional expression is constant\" Visual\nStudio 2022 warning in pedantic mode (#2783)",date:dayjs.unix(5616),},{hash:'ea6f0bf0e555c744fccbc0f6aa0e52b0429964cd',message:"Minor cleanup",date:dayjs.unix(5617),},{hash:'f607e3e970fe0dc0e71b04e4a65f50e90aac74df',message:"Add __float128 support",date:dayjs.unix(5681),},{hash:'22d31b31f0e9b4e4654ba67ee881f3564c2cc297',message:"Add a __float128 test",date:dayjs.unix(5682),},{hash:'a935ac3e60306f9220ed983eac97cb44a492171c',message:"MSVC CMake generation optimization (#2852)",date:dayjs.unix(5683),},{hash:'c55175a58906934416adf5fc5b820fcbb60ea6d1',message:"Add an issue template",date:dayjs.unix(5684),},{hash:'8751a03a042850854c6cdfbab510758e7f9d0f89',message:"Fix Unicode handling when writing to an ostream",date:dayjs.unix(5685),},{hash:'ce7ecdb7afb207dadf55c8ae457e14aa44e7f537',message:"Replace conditional compilation with SFINAE",date:dayjs.unix(5686),},{hash:'fc429d18b6d3c7587ae66cce27504871d4f49962',message:"Avoid overhead on sensible platforms",date:dayjs.unix(5687),},{hash:'395cf0f03ecaa35c24faaaca42d481e316f00422',message:"Fix detection of unformattable pointers",date:dayjs.unix(5688),},{hash:'192f79aaae0940c420cffd6c17c66770e502f039',message:"Fix handling of locale separators in FP formatting",date:dayjs.unix(5689),},{hash:'86e27ccb41c2708e17ba264359223ef664d9bb78',message:"Suppress a warning",date:dayjs.unix(5690),},];const data={labels:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],datasets:[{label:'named_dynamic_specs',data:[1133.5533494625045,1161.0614254359668,1104.8234161072894,1106.1672053666446,1107.1444830280423,1161.141326836382,1106.7937192923498,1106.4449413439104,1134.7065905000916,1137.0067195269291,1160.9488101606958,1105.9892140047023,1106.8044415564732,1136.3662199671987,1144.9692337417284,1125.0183850444985,1137.5306697058363,1125.6120745898133,1158.0375163344909,1132.2846574750604,1114.2622457964317,1114.847254364721,1141.7998384525656,1156.4636962757877,1114.3509656796434,1183.7075582303778,1104.623955947904,1097.5493196418201,1097.9636044315598,1114.5146993255173,1114.0123149161739,1130.610377187221,1097.3194079488946,1130.7910207372418,1114.317426105697,1091.5270290000672,1103.629401597528,],fill:false,cubicInterpolationMode:'monotone',tension:0.4,radius:0,borderColor:getColor(0,1.0),backgroundColor:getColor(0,0.5),},{label:'order_manual_dynamic_specs',data:[634.1656045732117,634.0864113969342,634.2063214705778,633.9606461969319,633.9961789913485,634.3177882830422,633.7903820791508,633.7676241615785,634.589403412295,633.4872129150248,633.6111310439591,633.9724237764264,633.540358993918,633.6888729891031,634.5123573068262,634.9830502383296,634.6595046272494,633.3683709010021,633.1211936101871,633.7465602848002,633.5816002076731,633.3750677106615,633.5419927940502,633.5686624095216,633.5882498796054,633.7270876789897,633.5067808297471,634.4315554084262,633.8079003319468,641.0660076807541,641.305088420227,649.1112133551281,634.3000083993269,648.4538794436427,641.4786039807899,633.7290158259265,633.7024775830573,],fill:false,cubicInterpolationMode:'monotone',tension:0.4,radius:0,borderColor:getColor(1,1.0),backgroundColor:getColor(1,0.5),},{label:'order_auto_dynamic_specs',data:[583.7638596151279,583.5731533876044,583.4936510757965,583.6853168258789,583.2804819397055,584.1022530896856,583.4651872183459,583.2829152071104,583.8545186838795,583.0693193398779,583.8906004753818,583.3966836791527,583.0429989065915,583.804615437304,584.8051794413096,585.0502522074751,584.9810463026963,583.2592515085112,582.8211525592402,583.0960202368168,583.6942724318596,582.9711506054322,583.0248394077563,583.3385340198078,583.3724171705597,584.2719438153172,583.3683820321554,583.1656764669552,582.8648337899945,591.2969693855783,591.3863209699929,599.5422375363864,583.379225952743,599.0505871850346,591.4931387375788,583.0197779397959,583.1715593427102,],fill:false,cubicInterpolationMode:'monotone',tension:0.4,radius:0,borderColor:getColor(2,1.0),backgroundColor:getColor(2,0.5),},{label:'named',data:[943.3850288447802,943.612851312124,943.4211581028159,943.3845977153128,943.7589331283947,943.3229957739096,943.1941245326192,943.3685806874086,943.3149269234831,943.6290573900656,943.4404764877221,943.4052167096457,943.24746165537,943.6115895953081,981.0117024600885,961.7949813183974,942.6445182547504,942.6397443295085,943.0762452694297,942.8163417218675,943.1448971362756,942.7708324325758,942.8798460603497,942.6933927852859,942.9153070666594,942.8995278589782,942.7592720402258,943.3482050184207,942.8603724420846,942.6514320251523,942.7476596253329,942.8072099257132,942.7780388851703,942.9385290672549,942.585967195303,943.0756584817856,943.6959155766702,],fill:false,cubicInterpolationMode:'monotone',tension:0.4,radius:0,borderColor:getColor(3,1.0),backgroundColor:getColor(3,0.5),},{label:'order_manual',data:[483.14540757684443,483.0616112173572,483.0916977499828,482.8910706175118,482.99484598433054,483.00946826924263,483.0303058575275,483.1028108403102,483.12764892670884,483.61750010378955,483.1527034898807,482.9941637641289,482.9540012364036,483.11083262710446,483.4381561731014,483.362279146322,483.09872078519766,483.78236456726177,483.577870803284,483.50259889062255,483.74031606081826,483.4523477716568,483.61542098506703,483.6380542581696,483.27522856954664,483.6014033476608,483.4176154388242,483.13659319137855,483.0286421629683,482.99930541353274,483.0608502532668,483.00242962757403,482.9962027413428,482.95875290220874,483.0211010136561,483.0960576660303,483.3448963243001,],fill:false,cubicInterpolationMode:'monotone',tension:0.4,radius:0,borderColor:getColor(4,1.0),backgroundColor:getColor(4,0.5),},{label:'order_auto',data:[413.3069164172389,413.40337010734487,413.36660775796696,413.3225624776139,413.4076398769202,413.33696471357985,413.3154418865137,413.3835407083156,413.2904586993022,413.7281329586636,413.35569633205415,413.37525451905685,413.2891178105874,413.43604181320467,413.3499511424712,413.3842434525956,413.3640995144313,413.3276844959987,413.3530452221653,413.3378244197276,413.30344421452486,413.3913618440428,413.3204544857402,413.3234764540225,413.45267431477487,413.3995397778136,413.30890003053923,413.6148129585963,413.4129233542389,413.40626584809564,413.41313053265276,413.4383899715915,413.3787916295448,413.3752744294038,413.440506909819,413.4806950546533,413.6393699967478,],fill:false,cubicInterpolationMode:'monotone',tension:0.4,radius:0,borderColor:getColor(5,1.0),backgroundColor:getColor(5,0.5),},]};const getCommitMessage=(tooltipItems)=>{let index=tooltipItems[0].dataIndex;let commit=commits[index];return commit.message;};const getCommitInfo=(tooltipItems)=>{let index=tooltipItems[0].dataIndex;let commit=commits[index];return commit.hash+'\n'+commit.date.format('YYYY-MM-DD HH:mm:ss z');};const htmlToElement=(html)=>{let template=document.createElement('template');html=html.trim();template.innerHTML=html;return template.content.firstChild;};const getCommitLink=(commitHash)=>{return"https://github.com/fmtlib/fmt/commit/"+commitHash;};const createAlert=(isSuccessful,commitHash)=>{return htmlToElement('\
    <div class="user-select-none alert alert-'+(isSuccessful?'success':'warning')+'" role="alert">\
      Commit hash '+(isSuccessful?'is':'couldn\'t be')+' copied to clipboard!\
      <a class="alert-link">Open it on Github</a>.\
    </div>');};const createToast=(isSuccessful,commitHash)=>{let toastsContainer=document.getElementById('toasts');let alertEl=createAlert(isSuccessful,commitHash);return Toastify({node:alertEl,duration:3000,destination:getCommitLink(commitHash),newWindow:true,close:false,stopOnFocus:true,selector:toastsContainer,callback:()=>{alertEl.remove();}});};const onChartClick=(event,elements,chart)=>{if(elements.length>0){let index=elements[0].index;let commit=commits[index];navigator.clipboard.writeText(commit.hash).then(function(){createToast(true,commit.hash).showToast();},function(){createToast(false,commit.hash).showToast();});}};const config={type:'line',data:data,options:{responsive:true,maintainAspectRatio:false,interaction:{intersect:false,mode:'index',},scales:{x:{ticks:{display:false,},grid:{display:false,}},},plugins:{tooltip:{callbacks:{title:getCommitMessage,beforeBody:getCommitInfo,}},title:{display:true,text:"fmt::format_to() with format string and 3 arguments",}},onClick:onChartClick,}};let ctx=document.getElementById('benchmarkChart');let bnchChart=new Chart(ctx,config);